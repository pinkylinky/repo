import net.jmatrix.eproperties.EProperties

EProperties p = new EProperties()
p.load(new FileInputStream(rootProject.projectDir.absolutePath + '/src/common.properties'))
p.load(new FileInputStream(rootProject.projectDir.absolutePath + '/user.properties'))

project.ext {
    JAVA_HOME=p.getProperty('JAVA_HOME')
    DEBUG=true
    MAJOR_VERSION='1'
    MINOR_VERSION='0.0'
    BUILD=''
}

buildscript {
       	repositories {
		flatDir {
			dirs rootProject.projectDir.absolutePath +'/libs'
		}
       	}
       	dependencies {
		classpath  ':eproperties_deps:1.1.2'
       	}
}


subprojects {

    repositories {
        flatDir {
            dirs rootProject.projectDir.absolutePath +'/libs'
        }
    }


	apply plugin: 'java'
    	compileJava { 
        	//options.fork(executable: project.JAVA_HOME + '/bin/javac.exe') 
	        options.encoding = 'UTF-8'
		//options.compilerArgs += ['-XDignore.symbol.file']
	} 


	buildscript {
        	repositories {
			flatDir {
				dirs rootProject.projectDir.absolutePath +'/libs'
			}
        	}
    	}

	// определяем зависимости которые предоставляются сервером приложений
	// http://blog.codeaholics.org/2012/emulating-mavens-provided-scope-in-gradle/	
	configurations {
		provided
		serverShared
	}
	
	sourceSets {
		main { 
			compileClasspath += configurations.provided
			compileClasspath += configurations.serverShared  
		}
	}

	apply plugin: 'eclipse'
	eclipse {
		classpath {
			// http://www.gradle.org/docs/current/groovydoc/org/gradle/plugins/ide/eclipse/model/EclipseClasspath.html
			// пути абсолютные, поэтому проэкты эклипса не хранятся в репо 
			// в каждый проект будет добавлены все ссылки на используемые библиотеки вебсферы
			plusConfigurations += configurations.provided
			plusConfigurations += configurations.serverShared
		}
	}

	test.onlyIf { Boolean.getBoolean('runTests') }
}



